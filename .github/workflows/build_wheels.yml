name: Build and Publish Wheels

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Go dependencies
        run: |
          go install github.com/go-python/gopy@latest
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Generate Python package source using gopy
        run: gopy pkg -output=_out -vm=python3 -name=banbta -version=0.3.0 github.com/banbox/banta/python/ta github.com/banbox/banta/python/tav

      - name: Replace setup.py with custom version
        run: cp python/setup_custom.py _out/setup.py

      - name: Set up Python for cibuildwheel
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel and other dependencies
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse _out
        env:
          # Install pybindgen before building each wheel, as it's required by our build script.
          CIBW_BEFORE_BUILD: "pip install pybindgen"
          # Skip testing for now. You can configure this later.
          CIBW_TEST_COMMAND: ""
          CIBW_TEST_SKIP: "*"

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    # Only run this job when a new tag starting with 'v' is pushed.
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    environment: pypi
    permissions:
      id-token: write # required for trusted publishing

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: cibw-wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No password needed, using trusted publishing with OIDC 