name: Build and Publish Wheels

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels_linux:
    name: Build wheels on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Use custom setup.py
        shell: bash # Use bash for consistency across platforms
        run: cp python/setup_custom.py setup.py

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CGO_ENABLED: 1
          # For Linux, install Go once per container using CIBW_BEFORE_ALL.
          # This is more efficient than installing it for every Python version.
          CIBW_BEFORE_ALL_LINUX: >
            set -ex &&
            curl -sL https://go.dev/dl/go1.23.0.linux-amd64.tar.gz | tar -C /usr/local -xzf - &&
            /usr/local/go/bin/go version &&
            /usr/local/go/bin/go install github.com/go-python/gopy@latest &&
            /usr/local/go/bin/go install golang.org/x/tools/cmd/goimports@latest &&
            ln -sf /root/go/bin/gopy /usr/local/bin/gopy &&
            ln -sf /root/go/bin/goimports /usr/local/bin/goimports
          
          # For Linux, add Go to the PATH inside the container.
          CIBW_ENVIRONMENT_LINUX: 'PATH=/usr/local/go/bin:/root/go/bin:$PATH'
          
          # Before building each wheel (on all platforms), install pybindgen and other build dependencies.
          CIBW_BEFORE_BUILD: "pip install pybindgen setuptools wheel"
          
          # Skip building for Python 3.7 and older, and all PyPy versions.
          CIBW_SKIP: "cp36-* cp37-* pp* *-i686"
          # Skip running tests for now.
          CIBW_TEST_COMMAND: "echo 'Tests are skipped'"
          CIBW_TEST_SKIP: "*"

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-linux
          path: ./wheelhouse/*.whl

  build_wheels_macos:
    name: Build wheels on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Go dependencies
        run: |
          go install github.com/go-python/gopy@latest
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Use custom setup.py
        shell: bash # Use bash for consistency across platforms
        run: cp python/setup_custom.py setup.py

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CGO_ENABLED: 1
          # Build for both x86_64 and arm64 (Apple Silicon)
          CIBW_ARCHS: "x86_64 arm64"
          CIBW_ENVIRONMENT: 'PATH=$HOME/go/bin:$PATH'
          CIBW_BEFORE_BUILD: "pip install pybindgen setuptools wheel"
          # Skip building for Python 3.7 and older, and all PyPy versions.
          CIBW_SKIP: "cp36-* cp37-* pp*"
          CIBW_TEST_COMMAND: "echo 'Tests are skipped'"
          CIBW_TEST_SKIP: "*"

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-macos
          path: ./wheelhouse/*.whl

  build_wheels_windows:
    name: Build wheels on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Go dependencies
        run: |
          go install github.com/go-python/gopy@latest
          go install golang.org/x/tools/cmd/goimports@latest
      
      - name: Use custom setup.py
        shell: bash # Use bash for consistency across platforms
        run: cp python/setup_custom.py setup.py

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CGO_ENABLED: 1
          # On Windows, GOPATH defaults to %USERPROFILE%\go
          # CIBW_ENVIRONMENT: 'PATH=%USERPROFILE%/go/bin;%PATH%'
          CIBW_BEFORE_BUILD: "pip install pybindgen setuptools wheel"
          # Skip building for Python 3.7 and older, and all PyPy versions.
          CIBW_SKIP: "cp36-* cp37-* pp* *-win32"
          CIBW_TEST_COMMAND: "echo 'Tests are skipped'"
          CIBW_TEST_SKIP: "*"

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-windows
          path: ./wheelhouse/*.whl

  publish_wheels:
    name: Publish wheels to PyPI
    needs: [build_wheels_linux, build_wheels_macos, build_wheels_windows]
    runs-on: ubuntu-latest
    # Only run on 'v*' tags, matching the trigger.
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: pypi
    permissions:
      id-token: write # required for trusted publishing

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: cibw-wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No password needed, using trusted publishing with OIDC 